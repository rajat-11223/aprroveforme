<div class="container-fluid">
  <div class="row-fluid">
    <div class="span9">
      <%= simple_form_for(@approval, :html => { :class => 'form-inline' }) do |f| %>
      <%= f.error_notification %>
      <%= f.input :title, :placeholder => "Give it a title" , :input_html => { :class => "span10" }%>
      <%= f.input :link, :placeholder => "Link to thing you want approved", :input_html => { :class => "span10" } %>
      <%= f.input :description, :placeholder => "What kind of feedback are you looking for?", :input_html => { :class => "span10", :rows => "3" } %>
      <%= f.input :deadline, as: :date, :default => Date.today+1, :input_html => { :class => "inline span10"} %>
  
     
      <table class="table-condensed">
        <tr>
          <td>Name</td><td>Email Address</td><td>Required?</td>
        </tr>
      <%= f.simple_fields_for :approvers do |builder| %>
        <%= render 'approver_form', :f => builder %> 

      <% end %>
        
      <!-- leave the tr add row for adding new approvers -->
      <tr class="add">
      </tr>
      <!-- end extra tr -->

      </table>
  
      <p>
      
      <%= button_to_add_fields('Add Approver', f, :approvers)%>
      
      </p>
      </br>
      <%= f.button :submit, :class => "btn-primary" %>
 
  <% end %>
    </div>


    <div class="span3">
      tips for how to use this
    </div>
  </div>
</div>




<script type="text/javascript">
function add_fields(link, association, content) {
  var new_id = new Date().getTime();
  var regexp = new RegExp("new_" + association, "g");
  //document.body.insertBefore(content.replace(regexp, new_id), $('div#insert'));
  $("tr.add").before(content.replace(regexp, new_id));
  //$(link).before(content.replace(regexp, new_id));
}

$(function() {
    $("input.date_picker").datepicker();
  });

</script>